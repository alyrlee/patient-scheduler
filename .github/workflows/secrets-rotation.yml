name: Secrets Rotation

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  rotate-secrets:
    name: Rotate Secrets
    runs-on: ubuntu-latest
    environment: production
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1

      - name: Rotate OpenAI API Key
        run: |
          # Generate new API key
          NEW_KEY=$(aws secretsmanager get-secret-value \
            --secret-id "patient-scheduler/openai-api-key" \
            --query SecretString --output text)
          
          # Update Vercel environment variables
          curl -X PATCH "https://api.vercel.com/v10/projects/${{ secrets.VERCEL_PROJECT_ID }}/env" \
            -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "key": "OPENAI_API_KEY",
              "value": "'$NEW_KEY'",
              "target": ["production", "preview"]
            }'

      - name: Rotate Database Credentials
        run: |
          # Rotate database credentials
          NEW_DB_PASSWORD=$(aws secretsmanager get-secret-value \
            --secret-id "patient-scheduler/database-password" \
            --query SecretString --output text)
          
          # Update backend environment
          curl -X PATCH "https://api.vercel.com/v10/projects/${{ secrets.BACKEND_PROJECT_ID }}/env" \
            -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "key": "DATABASE_PASSWORD",
              "value": "'$NEW_DB_PASSWORD'",
              "target": ["production", "preview"]
            }'

      - name: Notify Security Team
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#security'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
